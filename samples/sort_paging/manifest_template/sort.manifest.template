=====================================================================
== "sort" example with zrt library usage. new channels design
== following channels stdin, stdout, stderr (4, 5, 6) must be specified
== read/write: 0 - seq/seq, 1 - rnd/seq, 2 - seq/rnd, 3 - rnd/rnd
== cdr channel is the mix of type 2 and r/w limits >0, >0, >0, >0
=====================================================================
Channel = /dev/null, /dev/stdin, 0, 99999999, 99999999, 0, 0
Channel = {ABS_PATH}sort.stdout.log, /dev/stdout, 0, 0, 0, 99999999, 99999999
Channel = {ABS_PATH}sort.stderr.log, /dev/stderr, 0, 0, 0, 99999999, 99999999
Channel = {ABS_PATH}sort.zrt.log, /dev/debug, 0, 0, 0, 99999999, 99999999
Channel = {ABS_PATH}unsorted.data, random.dat, 3, 99999999, 99999999, 0, 0
Channel = {ABS_PATH}sorted.data, sorted.dat, 0, 0, 0, 99999999, 99999999

=====================================================================
== switches for zerovm. some of them used to control nexe, some
== for the internal zerovm needs
=====================================================================
Version = 13072012
Nexe = {ABS_PATH}sort_uint_proper_with_args.nexe
NexeMax = 10000000
SyscallsMax = 3333
CommandLine = random.dat sorted.dat
